func a(i, j) {
    return 1 / ((i + j) * (i + j + 1) / 2 + i + 1);
}

func au(u, v) {
    var i = 0;

    while i < len(u) {
        var t = 0;
        var j = 0;

        while j < len(u) {
            t = t + a(i, j) * u[j];

            j = j + 1;
        } 

        v[i] = t;
        i = i + 1;
    }
}

func atu(u, v) {
    var i = 0;

    while i < len(u) {
        var t = 0;
        var j = 0;

        while j < len(u) {
            t = t + a(j, i) * u[j];

            j = j + 1;
        } 

        v[i] = t;
        i = i + 1;
    }
}

func atau(u, v, w) {
    au(u, w);
    atu(w, v);
}

func arr_push(a, v) {
    a[len(a)] = v;
}

func sqrt(x) {
    var z = 1;
    var i = 1;
    while i <= 10 {
        z = z - (z * z - x) / (2 * z);
        i = i + 1;
    }

    return z;
}

func spectralnorm(n) {
    var i = 0;
    var u = [];
    var v = [];
    var w = [];
    
    var vv = 0.0;
    var vBv = 0.0;

    while i < n {
        arr_push(u, 1);
        arr_push(v, 0);
        arr_push(w, 0);

        i = i + 1;
    }

    i = 0;

    while i < 10 {
        atau(u, v, w);
        atau(v, u, w);

        i = i + 1;   
    }

    i = 0;

    while i < n {
        vBv = vBv + u[i] * v[i];
        vv = vv + v[i] * v[i];

        i = i + 1;
    }

    return sqrt(vBv / vv);
}

func main() {
    println(spectralnorm(5));
}